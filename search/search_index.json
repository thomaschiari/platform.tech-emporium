{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Tech Emporium Documentation","text":"<p>Bem-vindo \u00e0 documenta\u00e7\u00e3o do Tech Emporium! Este projeto simula uma loja online de produtos de tecnologia, constru\u00edda utilizando microsservi\u00e7os e APIs.</p>"},{"location":"#estrutura-do-projeto","title":"Estrutura do Projeto","text":""},{"location":"#servicos","title":"Servi\u00e7os","text":"<p>O projeto \u00e9 composto por diversos servi\u00e7os implementados em Java usando Spring Boot:</p> <ul> <li>Account: Gerencia as contas de usu\u00e1rio.</li> <li>Account Resource: API de recursos de contas.</li> <li>Auth: Gerencia autentica\u00e7\u00e3o e autoriza\u00e7\u00e3o.</li> <li>Auth Resource: API de recursos de autentica\u00e7\u00e3o.</li> <li>Product: Gerencia os produtos dispon\u00edveis na loja.</li> <li>Product Resource: API de recursos de produtos.</li> <li>Order: Gerencia os pedidos dos usu\u00e1rios.</li> <li>Order Resource: API de recursos de pedidos.</li> <li>Gateway: Redireciona as requisi\u00e7\u00f5es para os servi\u00e7os apropriados.</li> <li>Discovery: Servi\u00e7o de descoberta para localizar os servi\u00e7os.</li> <li>Docker API: Interface para gerenciar cont\u00eaineres Docker.</li> <li>Tech Emporium DB: Banco de dados central.</li> <li>Redis: Cache de alta performance.</li> <li>Paypal: Integra\u00e7\u00e3o com o servi\u00e7o de pagamento Paypal.</li> <li>Paypal Resource: API de recursos de pagamento.</li> </ul>"},{"location":"#infraestrutura","title":"Infraestrutura","text":"<p>A infraestrutura do projeto inclui os seguintes componentes:</p> <ul> <li>Redis: Utilizado para caching.</li> <li>Discovery Service: Servi\u00e7o de descoberta para localiza\u00e7\u00e3o de microsservi\u00e7os.</li> <li>TechEmporiumDB: Banco de dados centralizado para armazenar informa\u00e7\u00f5es.</li> <li>Circuit Breaker: Mecanismo de resili\u00eancia usando Resilience4j.</li> </ul>"},{"location":"#estrutura","title":"Estrutura","text":"<p>Aqui est\u00e1 uma imagem descritiva da estrutura de nosso projeto, com explica\u00e7\u00f5es.</p> <p></p> <ul> <li>O usu\u00e1rio acessa o Gateway, que redireciona as requisi\u00e7\u00f5es para os servi\u00e7os apropriados.</li> <li>O Discovery Service \u00e9 utilizado para que os servi\u00e7os se encontrem.</li> <li>O Grafana e o Prometheus monitoram a sa\u00fade dos servi\u00e7os, providenciando observabilidade.</li> </ul> <p>Mais informa\u00e7\u00f5es podem ser encontradas na documenta\u00e7\u00e3o de cada componente.</p> <p>Explore a documenta\u00e7\u00e3o para obter mais detalhes sobre cada componente e sua integra\u00e7\u00e3o no projeto.</p>"},{"location":"diagrams/","title":"Structure","text":""},{"location":"diagrams/#diagrama-de-funcionamento-de-servicos","title":"Diagrama de Funcionamento de Servi\u00e7os","text":"<p>Aqui est\u00e1 descrito como \u00e9 o funcionamento de nossa aplica\u00e7\u00e3o, com os servi\u00e7os e suas intera\u00e7\u00f5es.</p> <p></p> <p>Os nossos servi\u00e7os s\u00e3o interligados e se comunicam entre si para fornecer uma experi\u00eancia completa ao usu\u00e1rio. O Gateway \u00e9 respons\u00e1vel por redirecionar as requisi\u00e7\u00f5es para os servi\u00e7os apropriados, enquanto os servi\u00e7os de autentica\u00e7\u00e3o, contas, produtos e pedidos gerenciam as opera\u00e7\u00f5es espec\u00edficas de cada \u00e1rea. O servi\u00e7o de pagamentos, implementado posteriormente, tamb\u00e9m \u00e9 integrado ao sistema para permitir transa\u00e7\u00f5es seguras e eficientes.</p>"},{"location":"diagrams/#diagrama-de-funcionamento-de-infraestrutura","title":"Diagrama de Funcionamento de Infraestrutura","text":"<p>A infraestrutura do Tech Emporium \u00e9 composta por diversos componentes que garantem o funcionamento adequado dos servi\u00e7os. O Redis \u00e9 utilizado como cache de alta performance em todo o sistema, enquanto o Discovery Service \u00e9 respons\u00e1vel por localizar os microsservi\u00e7os. O Tech Emporium DB \u00e9 o banco de dados central que armazena todas as informa\u00e7\u00f5es persistentes, e o Circuit Breaker garante a resili\u00eancia dos servi\u00e7os em caso de falhas, utilizando a biblioteca Resilience4j.</p> <pre><code>classDiagram\n    class Gateway {\n        +Redireciona requisi\u00e7\u00f5es\n    }\n    class AuthService {\n        +Gerencia autentica\u00e7\u00e3o\n        +AuthResource\n    }\n    class AccountService {\n        +Gerencia contas de usu\u00e1rio\n        +AccountResource\n    }\n    class ProductService {\n        +Gerencia produtos\n        +ProductResource\n    }\n    class OrderService {\n        +Gerencia pedidos\n        +OrderResource\n    }\n\n    Gateway --&gt; AuthService : Redireciona autentica\u00e7\u00e3o\n    Gateway --&gt; AccountService : Redireciona gerenciamento de contas\n    Gateway --&gt; ProductService : Redireciona gerenciamento de produtos\n    Gateway --&gt; OrderService : Redireciona gerenciamento de pedidos\n\n    AuthService ..&gt; AuthResource : Utiliza\n    AccountService ..&gt; AccountResource : Utiliza\n    ProductService ..&gt; ProductResource : Utiliza\n    OrderService ..&gt; OrderResource : Utiliza\n</code></pre> <pre><code>classDiagram\n    class Redis {\n        +Cache de alta performance\n    }\n    class DiscoveryService {\n        +Servi\u00e7o de descoberta\n    }\n    class TechEmporiumDB {\n        +Banco de dados central\n    }\n    class CircuitBreaker {\n        +Mecanismo de resili\u00eancia\n    }\n\n    DiscoveryService --|&gt; AuthService\n    DiscoveryService --|&gt; AccountService\n    DiscoveryService --|&gt; ProductService\n    DiscoveryService --|&gt; OrderService\n\n    Redis --|&gt; AuthService\n    Redis --|&gt; ProductService\n    Redis --|&gt; OrderService\n\n    TechEmporiumDB --|&gt; AuthService\n    TechEmporiumDB --|&gt; AccountService\n    TechEmporiumDB --|&gt; ProductService\n    TechEmporiumDB --|&gt; OrderService\n\n    CircuitBreaker --|&gt; AuthService\n    CircuitBreaker --|&gt; AccountService\n    CircuitBreaker --|&gt; ProductService\n    CircuitBreaker --|&gt; OrderService\n</code></pre>"},{"location":"infra/","title":"Infra","text":""},{"location":"infra/#infraestrutura-do-tech-emporium","title":"Infraestrutura do Tech Emporium","text":""},{"location":"infra/#redis","title":"Redis","text":"<ul> <li>Utilizado como cache de alta performance para melhorar a velocidade de acesso aos dados.</li> <li>Link para reposit\u00f3rio: Redis</li> </ul>"},{"location":"infra/#discovery-service","title":"Discovery Service","text":"<ul> <li>Servi\u00e7o de descoberta para localiza\u00e7\u00e3o de microsservi\u00e7os.</li> <li>Link para reposit\u00f3rio: Discovery</li> </ul>"},{"location":"infra/#tech-emporium-db","title":"Tech Emporium DB","text":"<ul> <li>Banco de dados central que armazena todas as informa\u00e7\u00f5es persistentes.</li> <li>Link para reposit\u00f3rio: Tech Emporium DB</li> </ul>"},{"location":"infra/#circuit-breaker","title":"Circuit Breaker","text":"<ul> <li>Implementado utilizando Resilience4j para garantir resili\u00eancia dos servi\u00e7os.</li> <li>Link para documenta\u00e7\u00e3o: Resilience4j</li> </ul>"},{"location":"infra/#docker","title":"Docker","text":"<ul> <li>Plataforma para desenvolvimento, envio e execu\u00e7\u00e3o de aplica\u00e7\u00f5es em cont\u00eaineres.</li> <li>Link para documenta\u00e7\u00e3o: Docker</li> </ul>"},{"location":"infra/#minikube","title":"Minikube","text":"<ul> <li>Utilizado para orquestrar os cont\u00eaineres Docker em um ambiente de desenvolvimento local.</li> <li>Link para documenta\u00e7\u00e3o: Minikube</li> </ul> <p>Na nossa infraestrutura, utilizamos diversas ferramentas e servi\u00e7os para garantir o funcionamento adequado do Tech Emporium. Cada componente desempenha um papel fundamental na arquitetura de microsservi\u00e7os e na entrega de uma experi\u00eancia de usu\u00e1rio eficiente e confi\u00e1vel.</p>"},{"location":"tools/","title":"Tools","text":""},{"location":"tools/#ferramentas-utilizadas","title":"Ferramentas Utilizadas","text":""},{"location":"tools/#spring-boot","title":"Spring Boot","text":"<ul> <li>Framework Java utilizado para criar os microsservi\u00e7os.</li> <li>Documenta\u00e7\u00e3o do Spring Boot</li> </ul>"},{"location":"tools/#docker","title":"Docker","text":"<ul> <li>Plataforma para desenvolvimento, envio e execu\u00e7\u00e3o de aplica\u00e7\u00f5es em cont\u00eaineres.</li> <li>Documenta\u00e7\u00e3o do Docker</li> </ul>"},{"location":"tools/#redis","title":"Redis","text":"<ul> <li>Banco de dados em mem\u00f3ria utilizado para caching.</li> <li>Documenta\u00e7\u00e3o do Redis</li> </ul>"},{"location":"tools/#resilience4j","title":"Resilience4j","text":"<ul> <li>Biblioteca para implementa\u00e7\u00e3o de padr\u00f5es de resili\u00eancia, como Circuit Breaker.</li> <li>Documenta\u00e7\u00e3o do Resilience4j</li> </ul>"},{"location":"tools/#minikube","title":"Minikube","text":"<ul> <li>Ferramenta para executar Kubernetes localmente.</li> <li>Documenta\u00e7\u00e3o do Minikube</li> </ul>"},{"location":"tools/#jenkins","title":"Jenkins","text":"<ul> <li>Ferramenta de automa\u00e7\u00e3o de CI/CD.</li> <li>Documenta\u00e7\u00e3o do Jenkins</li> </ul>"},{"location":"tools/#outros","title":"Outros","text":"<ul> <li>Java: Linguagem de programa\u00e7\u00e3o utilizada.</li> <li>Maven: Ferramenta de gerenciamento de depend\u00eancias.</li> <li>PostgreSQL: Banco de dados utilizado para armazenamento persistente.</li> </ul>"}]}